{"version":3,"file":"bundle.es.js","sources":["../src/lib/indent.js","../src/lib/differs/inline.js","../src/index.js"],"sourcesContent":["export default function indent(str, depth = ''){\n    let sep = '';\n    if(!depth) return str;\n    if(typeof depth === 'number'){\n        depth = parseInt(depth);\n        for(let i=0; i<depth; i++){\n            sep += ' ';\n        }\n    }else if(typeof depth === 'string'){\n        sep = depth;\n    }\n\n    if(/\\n/.test(str)){\n        const parts = str.split(/\\n/);\n        return parts.map(s=>{\n            return sep + s;\n        }).join('\\n');\n    }else{\n        return sep + str;\n    }\n}\n","import indent from '../indent.js';\nimport serialize from 'serialize-javascript';\nimport jsDiff from 'diff';\nimport { allowedColors } from 'bitwane';\n\nconst colors = (()=>{\n    const color = c=> s=>'$('+c+')'+s+'$()';\n    return Object.keys(allowedColors)\n    .reduce((c, key)=>{\n        c[key] = color(key);\n        return c;\n    }, {});\n    /*return {\n        red: color('red'),\n        green: color('green'),\n        white: color('white'),\n        black: color('black')\n    };*/\n})();\n\nfunction createColors(){\n    const normal = typeof window === 'undefined'\n    ? 'white' : 'black';\n\n    return (part)=>{\n        // green for additions, red for deletions\n        // grey for common parts\n\n        let color = part.added ? 'green' :\n          part.removed ? 'red' : normal;\n          return colors[color](part.value);\n        //process.stderr.write(part.value[color]);\n    };\n}\n\nexport function inlineDiff(){\n    const colorize = createColors();\n    return function diff(expected, actual, dent = 0){\n        let dif, lhs = expected, rhs = actual;\n        if(typeof lhs === 'string'){\n            dif = jsDiff.diffWords(lhs, rhs);\n            return dent\n            ? indent(dif.map(colorize).join(''), dent).split('\\n')\n            : dif.map(colorize).join('').split('\\n');\n        }else if(typeof lhs === 'object'){\n            try{\n                dif = jsDiff.diffJson(lhs, rhs);\n            }catch(e){\n                dif = jsDiff.diffLines(\n                    serialize(lhs),\n                    serialize(rhs)\n                );\n            }\n        }else{\n            return `${lhs} != ${rhs}`;\n        }\n\n        return dent\n        ? dif.map(colorize).map(s=>indent(s, dent))\n        : dif.map(colorize);\n    }\n}\n","import { Logger, logSymbols } from 'bitwane';\nimport { inlineDiff } from './lib/differs.js';\n\nexport { logSymbols as symbols };\n\nexport class TestLogger extends Logger {\n    constructor({\n        prefixes = {},\n        diff = inlineDiff(),\n        each = undefined,\n        every = undefined\n    } = {}){\n        super({each, every});\n        this.prefixes = ['ok', 'notok']\n        .reduce((obj, key)=>{\n            obj[key] = prefixes[key] || '';\n            return obj;\n        }, {});\n        this._diff = diff;\n    }\n    ok(input, format = {}, dent = 0){\n        return this.log(this.prefixes.ok + input, format, dent);\n    }\n    notok(input, format = {}, dent = 0){\n        return this.error(this.prefixes.notok + input, format, dent);\n    }\n    diff(expected, actual, dent){\n        let lines = this._diff(expected, actual, dent);\n\n        lines.map(line=>{\n            super.log(line);\n            return line;\n        });\n    }\n}\n"],"names":["let","const","super"],"mappings":"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"}